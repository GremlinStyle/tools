#!/bin/bash

sudo gvm-start
echo -e "\n- - - - - $(date) - - - - -" >> /root/scripts/log.master
echo "Sleeping: be sure openvas is already running when continueing" >> /root/scripts/log.master
sleep 180
sudo chmod 662  /var/run/gvmd/gvmd.sock

getid() { local file=$1;sudo -u worker gvm-cli --gmp-username $GVMUSER --gmp-password $GVMPASWD socket --socketpath /run/gvmd/gvmd.sock --xml '<get_reports/>' | xmlstarlet sel -t -v '//task/@id' | uniq > "$file";}
getidbet() {
	local file=$1
	idist=()
	sudo -u worker gvm-cli --gmp-username $GVMUSER --gmp-password $GVMPASWD socket --socketpath /run/gvmd/gvmd.sock --xml '<get_reports/>' | xmlstarlet sel -t -v '//task/@id' | uniq > /tmp/temp.ids
	while read line; do idist+=("$line");done < /tmp/temp.ids
	#make a list of states
	staist=()
	sudo -u worker gvm-cli --gmp-username $GVMUSER --gmp-password $GVMPASWD socket --socketpath /run/gvmd/gvmd.sock --xml '<get_reports/>' | xmlstarlet sel -t -v '//scan_run_status' -n > /tmp/temp.status
	while read line; do staist+=("$line");done < /tmp/temp.status

	echo "" > "$ids2"

	if [ "${#idist[@]}" == "${#staist[@]}" ]; then
	for i in "${!idist[@]}"; do
	echo "$i"
	if [ ${staist[$i]} == "Done" ];then echo "${idist[$i]}" >> "$file";echo "This ${idist[$i]} will make a fine addition to my collection"; else echo "Task ${idist[$i]} is not done" >> /root/scripts/log.master; fi
	done
	else
	echo "ERROR: List of tasks status does not mach the list of tasks ids in Length" >> /root/scripts/log.master
	fi
}
saverp() { local line=$1; sudo -u worker gvm-cli --gmp-username $GVMUSER --gmp-password $GVMPASWD socket --socketpath /var/run/gvmd/gvmd.sock --xml "<get_results  filter='apply_overrides=0 min_qod=70 task_id=$line rows=1000 first=1 sort-reverse=severity' />" > "$rep/$line"; }
send() { local filese=$1; sendemail -f "$FROMAIL" -t "$TOMAIL" -u "Report from Minion: $(hostname)" -m "OpenVas report send: bonjur" -a "$filese.xml" -s smtp.gmail.com -o tls=yes -xu "$FROMAIL" -xp "$APPKEY" && echo "email sended?" >> /root/scripts/log.master; }

ss() {
    local file=$1
    getid "$file"
    cat "$file" | (while IFS= read -r line; do
        echo "$line"
        saverp "$line"
        file2="$rep/$line"
        send "$file2"
    done)
}

echo "all functions in da hood" >> /root/scripts/log.master

rep="/root/scripts/reports/rep"
ids="/root/scripts/reports/ids"
ids2="/root/scripts/reports/ids2"
tmpids="/root/scripts/reports/tmpids"

echo -e "current variables are:\n\t$rep\n\t$ids\n\t$ids2\n\t$tmpids" >> /root/scripts/log.master



echo "ante portas" >> /root/scripts/log.master

	#Start of Get Reports & send em
	if [ -e $rep ]; then
	echo "rep exist nothing to do" >> /root/scripts/log.master
	else 
	mkdir $rep
	echo "rep created" >> /root/scripts/log.master
	fi
	
	if [ -e "$ids" ]; then
		echo "Ids Exist" >> /root/scripts/log.master
		#getid "$ids2"
		#Usage of a function which checks if task is Done
		getidbet "$ids2"


	#    	seconds_in_month="1" #$((30 * 24 * 60 * 60))
	#	echo "Waiting for a month..."
	#	sleep "$seconds_in_month"
	#	echo "Done waiting."

	    if ! diff -q "$ids" "$ids2" >/dev/null; then
		diff  $ids $ids2 | grep ">\|<" | tr -d ">< " > "$tmpids"
		

		# Your code goes here
		echo "Executing of code because IDs are different." >> /root/scripts/log.master
		cat "$tmpids" | (while IFS= read -r line; do
		echo "$line"
		saverp "$line"
		file2="$rep/$line"
		send "$file2"
	    	done)
		# Add your code here...
		
		rm "$tmpids"
		# Save "ids2" as "ids"
		cp "$ids2" "$ids"
		rm "$ids2"
	    else
		echo "IDs are the same. No action needed." >> /root/scripts/log.master
	    fi;
	else
		echo "No ids found. This should be the firstime" >> /root/scripts/log.master
		ss "$ids"
	fi

	echo "- - - - -END- - - - -" >> /root/scripts/log.master